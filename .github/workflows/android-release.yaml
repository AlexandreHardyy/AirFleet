name: Build and Release APK

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SDK_REGISTRY_TOKEN: ${{ secrets.SDK_REGISTRY_TOKEN }}
      API_URL: ${{ secrets.API_URL }}
      API_URL_ANDROID: ${{ secrets.API_URL_ANDROID }}
      SOCKET_IO_URL_ANDROID: ${{ secrets.SOCKET_IO_URL_ANDROID }}
      SOCKET_IO_URL: ${{ secrets.SOCKET_IO_URL }}
      PUBLIC_ACCESS_TOKEN_MAPBOX: ${{ secrets.PUBLIC_ACCESS_TOKEN_MAPBOX }}
      PUBLIC_API_KEY_STRIPE: ${{ secrets.PUBLIC_API_KEY_STRIPE }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17.0.9'
    
    - name: Set up JAVA_HOME
      run: echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))" >> $GITHUB_ENV

    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.3' 

    - name: Create .env file
      run: |
        echo "API_URL=$API_URL" >> $GITHUB_WORKSPACE/frontend/.env
        echo "API_URL_ANDROID=$API_URL_ANDROID" >> $GITHUB_WORKSPACE/frontend/.env
        echo "SOCKET_IO_URL_ANDROID=$SOCKET_IO_URL_ANDROID" >> $GITHUB_WORKSPACE/frontend/.env
        echo "SOCKET_IO_URL=$SOCKET_IO_URL" >> $GITHUB_WORKSPACE/frontend/.env
        echo "PUBLIC_ACCESS_TOKEN_MAPBOX=$PUBLIC_ACCESS_TOKEN_MAPBOX" >> $GITHUB_WORKSPACE/frontend/.env
        echo "PUBLIC_API_KEY_STRIPE=$PUBLIC_API_KEY_STRIPE" >> $GITHUB_WORKSPACE/frontend/.env

    - name: Set SDK_REGISTRY_TOKEN in gradle.properties
      run: echo "SDK_REGISTRY_TOKEN=$SDK_REGISTRY_TOKEN" >> $GITHUB_WORKSPACE/frontend/android/gradle.properties 

    - name: Flutter pub get
      run: flutter pub get
      working-directory: frontend

    - name: Build APK
      run: flutter build apk --release
      working-directory: frontend
      env:
        API_URL: ${{ secrets.API_URL }}
        API_URL_ANDROID: ${{ secrets.API_URL_ANDROID }}
        SOCKET_IO_URL_ANDROID: ${{ secrets.SOCKET_IO_URL_ANDROID }}
        SOCKET_IO_URL: ${{ secrets.SOCKET_IO_URL }}
        PUBLIC_ACCESS_TOKEN_MAPBOX: ${{ secrets.PUBLIC_ACCESS_TOKEN_MAPBOX }}
        PUBLIC_API_KEY_STRIPE: ${{ secrets.PUBLIC_API_KEY_STRIPE }}

    - name: Upload APK to release
      uses: actions/upload-artifact@v2
      with:
        name: app-release.apk
        path: frontend/build/app/outputs/flutter-apk/app-release.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download APK from build job
      uses: actions/download-artifact@v2
      with:
        name: app-release.apk
        path: frontend/build/app/outputs/flutter-apk/

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: frontend/build/app/outputs/flutter-apk/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive
